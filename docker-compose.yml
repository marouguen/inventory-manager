# services:
#   db:
#     image: postgres:15
#     environment:
#       POSTGRES_DB: inventory_db
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: admin
#     volumes:
#       - db_data:/var/lib/postgresql/data
#     networks:
#       - backend

#   backend:
#     build: ./backend
#     ports:
#       - "8000:8000"
#     environment:
#       DATABASE_URL: postgresql://postgres:admin@db:5432/inventory_db
#       SECRET_KEY: "b55c8d5e72b267f259ae5a557cc35b74"
#     depends_on:
#       - db
#     networks:
#       - backend
#       - proxy

#   frontend:
#     build: ./frontend
#     ports:
#       - "80:80"
#     depends_on:
#       - backend
#     networks:
#       - proxy

# volumes:
#   db_data:

# networks:
#   backend:
#   proxy:

# Test in localhost
services:
  db:
    image: postgres:15
    container_name: inventory_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: inventory_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
    container_name: inventory-backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - ./backend/.env
    command: bash /start.sh

  frontend:
    build:
      context: ./frontend
    container_name: inventory-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    working_dir: /app
    command: sh -c "cp .env.development .env && npm install && npm run dev"

volumes:
  pgdata:
