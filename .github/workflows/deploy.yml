name: CI - Test and Deploy to Docker Hub

on:
  push:
    branches: [main]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/inventory-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/inventory-frontend
  DATABASE_URL: postgresql://postgres:admin@localhost:5432/inventory_db

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: inventory_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: 🛎️ Checkout Code
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: 📦 Install Backend Dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🔄 Run Alembic Migrations
        working-directory: ./backend
        run: alembic upgrade head

      - name: 👤 Initialize Default Admin User
        working-directory: ./backend
        run: PYTHONPATH=. python scripts/init_admin.py

      - name: ✅ Run Backend Tests (pytest)
        working-directory: ./backend
        run: pytest

      - name: 🟨 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: 📦 Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: ✅ Run Frontend Tests (vitest)
        working-directory: ./frontend
        run: npx vitest run

      - name: 🔐 Log in to Docker Hub
        run: echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

      - name: 🐳 Build & Push Backend Image
        run: |
          docker build -t $BACKEND_IMAGE:latest -f backend/Dockerfile.prod ./backend
          docker push $BACKEND_IMAGE:latest

      - name: 🐳 Build & Push Frontend Image
        run: |
          docker build -t $FRONTEND_IMAGE:latest -f frontend/Dockerfile.prod ./frontend
          docker push $FRONTEND_IMAGE:latest
