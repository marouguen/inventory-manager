name: CI/CD - Test and Deploy Full App

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/inventory-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/inventory-frontend
  DATABASE_URL: sqlite:///./test_stock_isolated.db
  PYTHONPATH: ./backend

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: 🔍 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: 📦 Install Backend Dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 👤 Create Test Users
        working-directory: ./backend
        run: python scripts/create_test_users.py

      - name: ✅ Run Backend Tests
        working-directory: ./backend
        run: pytest

      - name: 🟨 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: 📦 Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: ✅ Run Frontend Tests
        working-directory: ./frontend
        run: npx vitest run

      - name: 🔐 Log in to Docker Hub
        run: echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - name: 🐳 Build & Push Backend Docker Image
        run: |
          docker build -t $BACKEND_IMAGE:latest -f backend/Dockerfile.prod.backend ./backend
          docker push $BACKEND_IMAGE:latest

      - name: 🐳 Build & Push Frontend Docker Image
        run: |
          docker build -t $FRONTEND_IMAGE:latest -f frontend/Dockerfile.prod.frontend ./frontend
          docker push $FRONTEND_IMAGE:latest
  deploy-to-ec2:
    needs: test-and-build
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Copy Deployment Files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: |
            docker-compose.prod.yml
            .env.prod.backend
            .env.prod.frontend
          target: ~/app

      - name: 🚀 Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/app
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/inventory-backend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/inventory-frontend:latest
            docker compose -f docker-compose.prod.yml --env-file .env.prod.backend --env-file .env.prod.frontend up -d --force-recreate
