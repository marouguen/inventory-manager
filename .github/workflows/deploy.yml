name: Deploy to Docker Swarm on EC2

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    name: Build and Deploy to Docker Swarm
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      BACKEND_IMAGE: ghcr.io/${{ github.repository }}/inventory-backend:latest
      FRONTEND_IMAGE: ghcr.io/${{ github.repository }}/inventory-frontend:latest
      SSH_USER: ubuntu
      EC2_HOST: ${{ secrets.EC2_HOST }}
      SSH_KEY: ${{ secrets.EC2_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ env.BACKEND_IMAGE }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}

      - name: Prepare SSH key
        run: |
          echo "${SSH_KEY}" | base64 --decode > private_key
          chmod 600 private_key

      - name: Deploy to EC2
        run: |
          scp -i private_key -o StrictHostKeyChecking=no docker-compose.prod.yml $SSH_USER@$EC2_HOST:/home/$SSH_USER/docker-compose.prod.yml
          ssh -i private_key -o StrictHostKeyChecking=no $SSH_USER@$EC2_HOST << EOF
            docker stack deploy -c /home/$SSH_USER/docker-compose.prod.yml inventory_app
          EOF

      - name: Clean up private key
        if: always()
        run: rm -f private_key
